{"version":3,"sources":["EventEmitter.js","index.js"],"names":["EventEmitter","types","listeners","forEach","type","on","event","handler","push","off","handlerIndex","indexOf","splice","dispatch","args","CountDown","EVENT_TYPES","Utils","locale","ptBr","days","hours","minutes","seconds","dom","setClass","el","className","textContent","content","append","node","appendChild","appendAll","nodes","error","ElementNotProvided","message","InvalidDate","throw","console","Error","date","isValid","getTime","Number","isNaN","timer","count","until","distance","Date","now","Math","floor","elementSelectorOrRef","options","$element","document","querySelector","events","done","isPaused","lastCount","hasStarted","isFirstRender","$elements","main","createElement","number","label","run","remainingTime","render","setTimeout","padStart","start","isDateInvalid","pause","resume","destroy","countDown","remove","countDownClassNameIndex","slice","forceUpdate","dateUnit","window"],"mappings":"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","file":"index.map","sourceRoot":"..\\src","sourcesContent":["function EventEmitter(types = []) {\n  const listeners = {};\n\n  types.forEach(type => (listeners[type] = []));\n\n  this.on = on;\n  this.off = off;\n  this.dispatch = dispatch;\n\n  function on(event, handler) {\n    listeners[event].push(handler);\n\n    return handler;\n  }\n\n  function off(event, handler) {\n    const handlerIndex = listeners[event].indexOf(handler);\n\n    if (handlerIndex >= 0) {\n      listeners.splice(handlerIndex, 1);\n    } else {\n      listeners[event] = [];\n    }\n  }\n\n  function dispatch(event, args) {\n    listeners[event].forEach(handler => handler(args));\n  }\n}\n\nexport default EventEmitter;\n","import EventEmitter from \"./EventEmitter\";\n\nimport \"./styles.css\";\n\nconst EVENT_TYPES = [\n  \"start\",\n  \"pause\",\n  \"render\",\n  \"update\",\n  \"resume\",\n  \"destroy\",\n  \"click\",\n  \"end\"\n];\n\nconst Utils = {\n  locale: {\n    ptBr: {\n      days: \"Dias\",\n      hours: \"Horas\",\n      minutes: \"Min\",\n      seconds: \"Seg\"\n    }\n  },\n  dom: {\n    setClass: (el, className) => (el.className = `${el.className} ${className}`),\n    textContent: (el, content) => (el.textContent = content),\n    append: (el, node) => el.appendChild(node),\n    appendAll: (el, nodes) =>\n      nodes.forEach(node => el.appendChild(node))\n  },\n  error: {\n    types: {\n      ElementNotProvided: {\n        type: \"ElementNotProvided\",\n        message: \"You must provide either an element or a selector.\"\n      },\n      InvalidDate: {\n        type: \"InvalidDate\",\n        message:\n          \"You must pass a valid date to your count either when you instantiate you count down or through the start function.\"\n      }\n    },\n    throw(error) {\n      return console.error(\n        new Error(`${error.type}\\n Message: ${error.message}`)\n      );\n    }\n  },\n  date: {\n    isValid(date) {\n      if (!date) return false;\n\n      return date.getTime ? Number.isNaN(date.getTime()) : false;\n    }\n  },\n  timer: {\n    count(until) {\n      const distance = until - Date.now();\n\n      return {\n        days: Math.floor(distance / (1000 * 60 * 60 * 24)),\n        hours: Math.floor(\n          (distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n        ),\n        minutes: Math.floor(\n          (distance % (1000 * 60 * 60)) / (1000 * 60)\n        ),\n        seconds: Math.floor((distance % (1000 * 60)) / 1000)\n      };\n    }\n  }\n};\n\nfunction CountDown(elementSelectorOrRef, options = {}) {\n  const $element =\n    typeof elementSelectorOrRef === \"string\"\n      ? document.querySelector(elementSelectorOrRef)\n      : elementSelectorOrRef;\n\n  if (!$element) {\n    return Utils.error.throw(Utils.error.types.ElementNotProvided);\n  }\n\n  const events = new EventEmitter(EVENT_TYPES);\n  const locale = options.locale || Utils.locale.ptBr;\n\n  let done = false;\n  let isPaused = true;\n  let lastCount = null;\n  let hasStarted = false;\n  let isFirstRender = true;\n  let until = new Date(options.date || options.until);\n\n  const $elements = {\n    main: document.createElement(\"div\"),\n    days: {\n      main: document.createElement(\"div\"),\n      number: document.createElement(\"div\"),\n      label: document.createElement(\"div\")\n    },\n    hours: {\n      main: document.createElement(\"div\"),\n      number: document.createElement(\"div\"),\n      label: document.createElement(\"div\")\n    },\n    minutes: {\n      main: document.createElement(\"div\"),\n      number: document.createElement(\"div\"),\n      label: document.createElement(\"div\")\n    },\n    seconds: {\n      main: document.createElement(\"div\"),\n      number: document.createElement(\"div\"),\n      label: document.createElement(\"div\")\n    }\n  };\n\n  this.on = events.on;\n  this.off = events.off;\n\n  this.start = start;\n  this.pause = pause;\n  this.resume = resume;\n  this.destroy = destroy;\n  this.forceUpdate = forceUpdate;\n\n  function run() {\n    if (done) return;\n\n    if (!isPaused) {\n      const remainingTime = Utils.timer.count(until);\n\n      lastCount = remainingTime;\n\n      if (until < new Date()) {\n        done = true;\n\n        const count = { days: 0, hours: 0, minutes: 0, seconds: 0 };\n\n        events.dispatch(\"update\", count);\n\n        render(count);\n\n        events.dispatch(\"render\", count);\n        events.dispatch(\"end\", count);\n\n        return;\n      }\n\n      events.dispatch(\"update\", lastCount);\n      render(remainingTime);\n\n      setTimeout(run, 1000);\n    }\n  }\n\n  function start(date) {\n    const hasValidUntilDate = Utils.date.isValid(until);\n    const isDateInvalid =\n      hasValidUntilDate || Utils.date.isValid(date);\n\n    if (isDateInvalid) {\n      return Utils.error.throw(Utils.error.types.InvalidDate);\n    }\n\n    if (hasStarted) return;\n\n    isPaused = false;\n    hasStarted = true;\n\n    events.dispatch(\"start\", lastCount);\n\n    run();\n  }\n\n  function forceUpdate() {\n    const remainingTime = Utils.timer.count(until);\n\n    lastCount = remainingTime;\n\n    render(remainingTime);\n  }\n\n  function render({ days, hours, minutes, seconds }) {\n    if (isFirstRender) {\n      isFirstRender = false;\n\n      Utils.dom.append($element, $elements.main);\n\n      Utils.dom.setClass($element, \"count-down\");\n      Utils.dom.setClass($elements.main, \"count-down__container\");\n    }\n\n    Utils.dom.textContent(\n      $elements.days.number,\n      `${days}`.padStart(2, 0)\n    );\n    Utils.dom.textContent(\n      $elements.hours.number,\n      `${hours}`.padStart(2, 0)\n    );\n    Utils.dom.textContent(\n      $elements.minutes.number,\n      `${minutes}`.padStart(2, 0)\n    );\n    Utils.dom.textContent(\n      $elements.seconds.number,\n      `${seconds}`.padStart(2, 0)\n    );\n\n    events.dispatch(\"render\", lastCount);\n  }\n\n  function resume() {\n    isPaused = false;\n\n    events.dispatch(\"resume\", lastCount);\n\n    run();\n  }\n\n  function pause() {\n    if (!isPaused) {\n      isPaused = true;\n\n      events.dispatch(\"pause\", lastCount);\n    }\n  }\n\n  function destroy() {\n    const countDown = $element.querySelector('.count-down__container');\n\n    if (countDown) {\n      done = true;\n      isPaused = false;\n\n      countDown.remove();\n      events.dispatch(\"destroy\", lastCount);\n      \n      const countDownClassNameIndex = $element.className.indexOf('count-down');\n\n      if (countDownClassNameIndex >= 0) {\n        const className = $element.className.slice(countDownClassNameIndex, 10);\n\n        Utils.dom.setClass($element, className);\n      }\n    }\n\n  }\n\n  const dateUnits = [\"days\", \"hours\", \"minutes\", \"seconds\"];\n\n  dateUnits.forEach((dateUnit) => {\n    const { main, label, number } = $elements[dateUnit];\n\n    Utils.dom.appendAll(main, [label, number]);\n\n    Utils.dom.textContent(label, locale[dateUnit]);\n\n    Utils.dom.setClass(main, \"count-down__unit-box\");\n    Utils.dom.setClass(label, \"count-down__unit-label\");\n    Utils.dom.setClass(number, \"count-down__unit-number\");\n\n    Utils.dom.append($elements.main, main);\n  });\n}\n\nwindow.CountDown = CountDown;\n\nexport default CountDown;\n"]}